{"version":3,"file":"deep-equals.js","sourceRoot":"","sources":["../src/deep-equals.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nexport const deepArrayEquals = <T extends ReadonlyArray<unknown>>(\n  oldArgs: T,\n  newArgs: T\n) =>\n  oldArgs === newArgs ||\n  (oldArgs.length === newArgs.length &&\n    oldArgs.every((v, i) => deepEquals(v, newArgs[i])));\n\nconst objectValueOf = Object.prototype.valueOf;\nconst objectToString = Object.prototype.toString;\nconst {keys: objectKeys} = Object;\nconst {isArray} = Array;\n\n/**\n * Recursively checks two objects for equality.\n *\n * This function handles the following cases:\n *  - Primitives: primitives compared with Object.is()\n *  - Objects: to be equal, two objects must:\n *    - have the same constructor\n *    - have same set of own property names\n *    - have each own property be deeply equal\n *  - Arrays, Maps, Sets, and RegExps\n *  - Objects with custom valueOf() (ex: Date)\n *  - Objects with custom toString() (ex: URL)\n *\n * Important: Objects must be free of cycles, otherwise this function will\n * run infinitely!\n */\nexport const deepEquals = (a: unknown, b: unknown): boolean => {\n  if (Object.is(a, b)) {\n    return true;\n  }\n\n  if (\n    a !== null &&\n    b !== null &&\n    typeof a === 'object' &&\n    typeof b === 'object'\n  ) {\n    // Object must have the same prototype / constructor\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    // Arrays must have the same length and recursively equal items\n    if (isArray(a)) {\n      if (a.length !== (b as Array<unknown>).length) {\n        return false;\n      }\n      return a.every((v, i) => deepEquals(v, (b as Array<unknown>)[i]));\n    }\n\n    // Defer to custom valueOf implementations. This handles Dates which return\n    // ms since epoch: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/valueOf\n    if (a.valueOf !== objectValueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n\n    // Defer to custom toString implementations. This should handle\n    // TrustedTypes, URLs, and such. This might be a bit risky, but\n    // fast-deep-equals does it.\n    if (a.toString !== objectToString) {\n      return a.toString() === b.toString();\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      for (const [k, v] of a.entries()) {\n        if (\n          deepEquals(v, b.get(k)) === false ||\n          (v === undefined && b.has(k) === false)\n        ) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      for (const k of a.keys()) {\n        if (b.has(k) === false) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    if (a instanceof RegExp) {\n      return (\n        a.source === (b as RegExp).source && a.flags === (b as RegExp).flags\n      );\n    }\n\n    // We have two objects, check every key\n    const keys = objectKeys(a) as Array<keyof typeof a>;\n\n    if (keys.length !== objectKeys(b).length) {\n      return false;\n    }\n\n    for (const key of keys) {\n      if (!b.hasOwnProperty(key) || !deepEquals(a[key], b[key])) {\n        return false;\n      }\n    }\n\n    // All keys in the two objects have been compared!\n    return true;\n  }\n\n  return false;\n};\n"]}