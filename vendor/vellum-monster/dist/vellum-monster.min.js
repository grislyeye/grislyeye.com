"use strict";
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */const t="undefined"!=typeof window&&null!=window.customElements&&void 0!==window.customElements.polyfillWrapFlushCallback,e=(t,e,s=null)=>{for(;e!==s;){const s=e.nextSibling;t.removeChild(e),e=s}},s=`{{lit-${String(Math.random()).slice(2)}}}`,i=`\x3c!--${s}--\x3e`,a=new RegExp(`${s}|${i}`);class n{constructor(t,e){this.parts=[],this.element=e;const i=[],n=[],o=document.createTreeWalker(e.content,133,null,!1);let d=0,h=-1,p=0;const{strings:u,values:{length:m}}=t;for(;p<m;){const t=o.nextNode();if(null!==t){if(h++,1===t.nodeType){if(t.hasAttributes()){const e=t.attributes,{length:s}=e;let i=0;for(let t=0;t<s;t++)r(e[t].name,"$lit$")&&i++;for(;i-- >0;){const e=u[p],s=c.exec(e)[2],i=s.toLowerCase()+"$lit$",n=t.getAttribute(i);t.removeAttribute(i);const r=n.split(a);this.parts.push({type:"attribute",index:h,name:s,strings:r}),p+=r.length-1}}"TEMPLATE"===t.tagName&&(n.push(t),o.currentNode=t.content)}else if(3===t.nodeType){const e=t.data;if(e.indexOf(s)>=0){const s=t.parentNode,n=e.split(a),o=n.length-1;for(let e=0;e<o;e++){let i,a=n[e];if(""===a)i=l();else{const t=c.exec(a);null!==t&&r(t[2],"$lit$")&&(a=a.slice(0,t.index)+t[1]+t[2].slice(0,-"$lit$".length)+t[3]),i=document.createTextNode(a)}s.insertBefore(i,t),this.parts.push({type:"node",index:++h})}""===n[o]?(s.insertBefore(l(),t),i.push(t)):t.data=n[o],p+=o}}else if(8===t.nodeType)if(t.data===s){const e=t.parentNode;null!==t.previousSibling&&h!==d||(h++,e.insertBefore(l(),t)),d=h,this.parts.push({type:"node",index:h}),null===t.nextSibling?t.data="":(i.push(t),h--),p++}else{let e=-1;for(;-1!==(e=t.data.indexOf(s,e+1));)this.parts.push({type:"node",index:-1}),p++}}else o.currentNode=n.pop()}for(const t of i)t.parentNode.removeChild(t)}}const r=(t,e)=>{const s=t.length-e.length;return s>=0&&t.slice(s)===e},o=t=>-1!==t.index,l=()=>document.createComment(""),c=/([ \x09\x0a\x0c\x0d])([^\0-\x1F\x7F-\x9F "'>=/]+)([ \x09\x0a\x0c\x0d]*=[ \x09\x0a\x0c\x0d]*(?:[^ \x09\x0a\x0c\x0d"'`<>=]*|"[^"]*|'[^']*))$/;function d(t,e){const{element:{content:s},parts:i}=t,a=document.createTreeWalker(s,133,null,!1);let n=p(i),r=i[n],o=-1,l=0;const c=[];let d=null;for(;a.nextNode();){o++;const t=a.currentNode;for(t.previousSibling===d&&(d=null),e.has(t)&&(c.push(t),null===d&&(d=t)),null!==d&&l++;void 0!==r&&r.index===o;)r.index=null!==d?-1:r.index-l,n=p(i,n),r=i[n]}c.forEach((t=>t.parentNode.removeChild(t)))}const h=t=>{let e=11===t.nodeType?0:1;const s=document.createTreeWalker(t,133,null,!1);for(;s.nextNode();)e++;return e},p=(t,e=-1)=>{for(let s=e+1;s<t.length;s++){const e=t[s];if(o(e))return s}return-1};
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
const u=new WeakMap,m=t=>"function"==typeof t&&u.has(t),g={},f={};
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
class y{constructor(t,e,s){this.__parts=[],this.template=t,this.processor=e,this.options=s}update(t){let e=0;for(const s of this.__parts)void 0!==s&&s.setValue(t[e]),e++;for(const t of this.__parts)void 0!==t&&t.commit()}_clone(){const e=t?this.template.element.content.cloneNode(!0):document.importNode(this.template.element.content,!0),s=[],i=this.template.parts,a=document.createTreeWalker(e,133,null,!1);let n,r=0,l=0,c=a.nextNode();for(;r<i.length;)if(n=i[r],o(n)){for(;l<n.index;)l++,"TEMPLATE"===c.nodeName&&(s.push(c),a.currentNode=c.content),null===(c=a.nextNode())&&(a.currentNode=s.pop(),c=a.nextNode());if("node"===n.type){const t=this.processor.handleTextExpression(this.options);t.insertAfterNode(c.previousSibling),this.__parts.push(t)}else this.__parts.push(...this.processor.handleAttributeExpressions(c,n.name,n.strings,this.options));r++}else this.__parts.push(void 0),r++;return t&&(document.adoptNode(e),customElements.upgrade(e)),e}}
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */const v=window.trustedTypes&&trustedTypes.createPolicy("lit-html",{createHTML:t=>t}),b=` ${s} `;class S{constructor(t,e,s,i){this.strings=t,this.values=e,this.type=s,this.processor=i}getHTML(){const t=this.strings.length-1;let e="",a=!1;for(let n=0;n<t;n++){const t=this.strings[n],r=t.lastIndexOf("\x3c!--");a=(r>-1||a)&&-1===t.indexOf("--\x3e",r+1);const o=c.exec(t);e+=null===o?t+(a?b:i):t.substr(0,o.index)+o[1]+o[2]+"$lit$"+o[3]+s}return e+=this.strings[t],e}getTemplateElement(){const t=document.createElement("template");let e=this.getHTML();return void 0!==v&&(e=v.createHTML(e)),t.innerHTML=e,t}}
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */const _=t=>null===t||!("object"==typeof t||"function"==typeof t),k=t=>Array.isArray(t)||!(!t||!t[Symbol.iterator]);class w{constructor(t,e,s){this.dirty=!0,this.element=t,this.name=e,this.strings=s,this.parts=[];for(let t=0;t<s.length-1;t++)this.parts[t]=this._createPart()}_createPart(){return new $(this)}_getValue(){const t=this.strings,e=t.length-1,s=this.parts;if(1===e&&""===t[0]&&""===t[1]){const t=s[0].value;if("symbol"==typeof t)return String(t);if("string"==typeof t||!k(t))return t}let i="";for(let a=0;a<e;a++){i+=t[a];const e=s[a];if(void 0!==e){const t=e.value;if(_(t)||!k(t))i+="string"==typeof t?t:String(t);else for(const e of t)i+="string"==typeof e?e:String(e)}}return i+=t[e],i}commit(){this.dirty&&(this.dirty=!1,this.element.setAttribute(this.name,this._getValue()))}}class ${constructor(t){this.value=void 0,this.committer=t}setValue(t){t===g||_(t)&&t===this.value||(this.value=t,m(t)||(this.committer.dirty=!0))}commit(){for(;m(this.value);){const t=this.value;this.value=g,t(this)}this.value!==g&&this.committer.commit()}}class x{constructor(t){this.value=void 0,this.__pendingValue=void 0,this.options=t}appendInto(t){this.startNode=t.appendChild(l()),this.endNode=t.appendChild(l())}insertAfterNode(t){this.startNode=t,this.endNode=t.nextSibling}appendIntoPart(t){t.__insert(this.startNode=l()),t.__insert(this.endNode=l())}insertAfterPart(t){t.__insert(this.startNode=l()),this.endNode=t.endNode,t.endNode=this.startNode}setValue(t){this.__pendingValue=t}commit(){if(null===this.startNode.parentNode)return;for(;m(this.__pendingValue);){const t=this.__pendingValue;this.__pendingValue=g,t(this)}const t=this.__pendingValue;t!==g&&(_(t)?t!==this.value&&this.__commitText(t):t instanceof S?this.__commitTemplateResult(t):t instanceof Node?this.__commitNode(t):k(t)?this.__commitIterable(t):t===f?(this.value=f,this.clear()):this.__commitText(t))}__insert(t){this.endNode.parentNode.insertBefore(t,this.endNode)}__commitNode(t){this.value!==t&&(this.clear(),this.__insert(t),this.value=t)}__commitText(t){const e=this.startNode.nextSibling,s="string"==typeof(t=null==t?"":t)?t:String(t);e===this.endNode.previousSibling&&3===e.nodeType?e.data=s:this.__commitNode(document.createTextNode(s)),this.value=t}__commitTemplateResult(t){const e=this.options.templateFactory(t);if(this.value instanceof y&&this.value.template===e)this.value.update(t.values);else{const s=new y(e,t.processor,this.options),i=s._clone();s.update(t.values),this.__commitNode(i),this.value=s}}__commitIterable(t){Array.isArray(this.value)||(this.value=[],this.clear());const e=this.value;let s,i=0;for(const a of t)s=e[i],void 0===s&&(s=new x(this.options),e.push(s),0===i?s.appendIntoPart(this):s.insertAfterPart(e[i-1])),s.setValue(a),s.commit(),i++;i<e.length&&(e.length=i,this.clear(s&&s.endNode))}clear(t=this.startNode){e(this.startNode.parentNode,t.nextSibling,this.endNode)}}class A{constructor(t,e,s){if(this.value=void 0,this.__pendingValue=void 0,2!==s.length||""!==s[0]||""!==s[1])throw new Error("Boolean attributes can only contain a single expression");this.element=t,this.name=e,this.strings=s}setValue(t){this.__pendingValue=t}commit(){for(;m(this.__pendingValue);){const t=this.__pendingValue;this.__pendingValue=g,t(this)}if(this.__pendingValue===g)return;const t=!!this.__pendingValue;this.value!==t&&(t?this.element.setAttribute(this.name,""):this.element.removeAttribute(this.name),this.value=t),this.__pendingValue=g}}class C extends w{constructor(t,e,s){super(t,e,s),this.single=2===s.length&&""===s[0]&&""===s[1]}_createPart(){return new R(this)}_getValue(){return this.single?this.parts[0].value:super._getValue()}commit(){this.dirty&&(this.dirty=!1,this.element[this.name]=this._getValue())}}class R extends ${}let N=!1;(()=>{try{const t={get capture(){return N=!0,!1}};window.addEventListener("test",t,t),window.removeEventListener("test",t,t)}catch(t){}})();class P{constructor(t,e,s){this.value=void 0,this.__pendingValue=void 0,this.element=t,this.eventName=e,this.eventContext=s,this.__boundHandleEvent=t=>this.handleEvent(t)}setValue(t){this.__pendingValue=t}commit(){for(;m(this.__pendingValue);){const t=this.__pendingValue;this.__pendingValue=g,t(this)}if(this.__pendingValue===g)return;const t=this.__pendingValue,e=this.value,s=null==t||null!=e&&(t.capture!==e.capture||t.once!==e.once||t.passive!==e.passive),i=null!=t&&(null==e||s);s&&this.element.removeEventListener(this.eventName,this.__boundHandleEvent,this.__options),i&&(this.__options=T(t),this.element.addEventListener(this.eventName,this.__boundHandleEvent,this.__options)),this.value=t,this.__pendingValue=g}handleEvent(t){"function"==typeof this.value?this.value.call(this.eventContext||this.element,t):this.value.handleEvent(t)}}const T=t=>t&&(N?{capture:t.capture,passive:t.passive,once:t.once}:t.capture)
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */;function E(t){let e=B.get(t.type);void 0===e&&(e={stringsArray:new WeakMap,keyString:new Map},B.set(t.type,e));let i=e.stringsArray.get(t.strings);if(void 0!==i)return i;const a=t.strings.join(s);return i=e.keyString.get(a),void 0===i&&(i=new n(t,t.getTemplateElement()),e.keyString.set(a,i)),e.stringsArray.set(t.strings,i),i}const B=new Map,M=new WeakMap;
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */const U=new
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
class{handleAttributeExpressions(t,e,s,i){const a=e[0];if("."===a){return new C(t,e.slice(1),s).parts}if("@"===a)return[new P(t,e.slice(1),i.eventContext)];if("?"===a)return[new A(t,e.slice(1),s)];return new w(t,e,s).parts}handleTextExpression(t){return new x(t)}};
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */"undefined"!=typeof window&&(window.litHtmlVersions||(window.litHtmlVersions=[])).push("1.3.0");const V=(t,...e)=>new S(t,e,"html",U)
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */,j=(t,e)=>`${t}--${e}`;let O=!0;void 0===window.ShadyCSS?O=!1:void 0===window.ShadyCSS.prepareTemplateDom&&(console.warn("Incompatible ShadyCSS version detected. Please update to at least @webcomponents/webcomponentsjs@2.0.2 and @webcomponents/shadycss@1.3.1."),O=!1);const I=t=>e=>{const i=j(e.type,t);let a=B.get(i);void 0===a&&(a={stringsArray:new WeakMap,keyString:new Map},B.set(i,a));let r=a.stringsArray.get(e.strings);if(void 0!==r)return r;const o=e.strings.join(s);if(r=a.keyString.get(o),void 0===r){const s=e.getTemplateElement();O&&window.ShadyCSS.prepareTemplateDom(s,t),r=new n(e,s),a.keyString.set(o,r)}return a.stringsArray.set(e.strings,r),r},D=["html","svg"],L=new Set,H=(t,e,s)=>{L.add(t);const i=s?s.element:document.createElement("template"),a=e.querySelectorAll("style"),{length:n}=a;if(0===n)return void window.ShadyCSS.prepareTemplateStyles(i,t);const r=document.createElement("style");for(let t=0;t<n;t++){const e=a[t];e.parentNode.removeChild(e),r.textContent+=e.textContent}(t=>{D.forEach((e=>{const s=B.get(j(e,t));void 0!==s&&s.keyString.forEach((t=>{const{element:{content:e}}=t,s=new Set;Array.from(e.querySelectorAll("style")).forEach((t=>{s.add(t)})),d(t,s)}))}))})(t);const o=i.content;s?function(t,e,s=null){const{element:{content:i},parts:a}=t;if(null==s)return void i.appendChild(e);const n=document.createTreeWalker(i,133,null,!1);let r=p(a),o=0,l=-1;for(;n.nextNode();)for(l++,n.currentNode===s&&(o=h(e),s.parentNode.insertBefore(e,s));-1!==r&&a[r].index===l;){if(o>0){for(;-1!==r;)a[r].index+=o,r=p(a,r);return}r=p(a,r)}}(s,r,o.firstChild):o.insertBefore(r,o.firstChild),window.ShadyCSS.prepareTemplateStyles(i,t);const l=o.querySelector("style");if(window.ShadyCSS.nativeShadow&&null!==l)e.insertBefore(l.cloneNode(!0),e.firstChild);else if(s){o.insertBefore(r,o.firstChild);const t=new Set;t.add(r),d(s,t)}};window.JSCompiler_renameProperty=(t,e)=>t;const z={toAttribute(t,e){switch(e){case Boolean:return t?"":null;case Object:case Array:return null==t?t:JSON.stringify(t)}return t},fromAttribute(t,e){switch(e){case Boolean:return null!==t;case Number:return null===t?null:Number(t);case Object:case Array:return JSON.parse(t)}return t}},q=(t,e)=>e!==t&&(e==e||t==t),F={attribute:!0,type:String,converter:z,reflect:!1,hasChanged:q};class W extends HTMLElement{constructor(){super(),this.initialize()}static get observedAttributes(){this.finalize();const t=[];return this._classProperties.forEach(((e,s)=>{const i=this._attributeNameForProperty(s,e);void 0!==i&&(this._attributeToPropertyMap.set(i,s),t.push(i))})),t}static _ensureClassProperties(){if(!this.hasOwnProperty(JSCompiler_renameProperty("_classProperties",this))){this._classProperties=new Map;const t=Object.getPrototypeOf(this)._classProperties;void 0!==t&&t.forEach(((t,e)=>this._classProperties.set(e,t)))}}static createProperty(t,e=F){if(this._ensureClassProperties(),this._classProperties.set(t,e),e.noAccessor||this.prototype.hasOwnProperty(t))return;const s="symbol"==typeof t?Symbol():`__${t}`,i=this.getPropertyDescriptor(t,s,e);void 0!==i&&Object.defineProperty(this.prototype,t,i)}static getPropertyDescriptor(t,e,s){return{get(){return this[e]},set(i){const a=this[t];this[e]=i,this.requestUpdateInternal(t,a,s)},configurable:!0,enumerable:!0}}static getPropertyOptions(t){return this._classProperties&&this._classProperties.get(t)||F}static finalize(){const t=Object.getPrototypeOf(this);if(t.hasOwnProperty("finalized")||t.finalize(),this.finalized=!0,this._ensureClassProperties(),this._attributeToPropertyMap=new Map,this.hasOwnProperty(JSCompiler_renameProperty("properties",this))){const t=this.properties,e=[...Object.getOwnPropertyNames(t),..."function"==typeof Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(t):[]];for(const s of e)this.createProperty(s,t[s])}}static _attributeNameForProperty(t,e){const s=e.attribute;return!1===s?void 0:"string"==typeof s?s:"string"==typeof t?t.toLowerCase():void 0}static _valueHasChanged(t,e,s=q){return s(t,e)}static _propertyValueFromAttribute(t,e){const s=e.type,i=e.converter||z,a="function"==typeof i?i:i.fromAttribute;return a?a(t,s):t}static _propertyValueToAttribute(t,e){if(void 0===e.reflect)return;const s=e.type,i=e.converter;return(i&&i.toAttribute||z.toAttribute)(t,s)}initialize(){this._updateState=0,this._updatePromise=new Promise((t=>this._enableUpdatingResolver=t)),this._changedProperties=new Map,this._saveInstanceProperties(),this.requestUpdateInternal()}_saveInstanceProperties(){this.constructor._classProperties.forEach(((t,e)=>{if(this.hasOwnProperty(e)){const t=this[e];delete this[e],this._instanceProperties||(this._instanceProperties=new Map),this._instanceProperties.set(e,t)}}))}_applyInstanceProperties(){this._instanceProperties.forEach(((t,e)=>this[e]=t)),this._instanceProperties=void 0}connectedCallback(){this.enableUpdating()}enableUpdating(){void 0!==this._enableUpdatingResolver&&(this._enableUpdatingResolver(),this._enableUpdatingResolver=void 0)}disconnectedCallback(){}attributeChangedCallback(t,e,s){e!==s&&this._attributeToProperty(t,s)}_propertyToAttribute(t,e,s=F){const i=this.constructor,a=i._attributeNameForProperty(t,s);if(void 0!==a){const t=i._propertyValueToAttribute(e,s);if(void 0===t)return;this._updateState=8|this._updateState,null==t?this.removeAttribute(a):this.setAttribute(a,t),this._updateState=-9&this._updateState}}_attributeToProperty(t,e){if(8&this._updateState)return;const s=this.constructor,i=s._attributeToPropertyMap.get(t);if(void 0!==i){const t=s.getPropertyOptions(i);this._updateState=16|this._updateState,this[i]=s._propertyValueFromAttribute(e,t),this._updateState=-17&this._updateState}}requestUpdateInternal(t,e,s){let i=!0;if(void 0!==t){const a=this.constructor;s=s||a.getPropertyOptions(t),a._valueHasChanged(this[t],e,s.hasChanged)?(this._changedProperties.has(t)||this._changedProperties.set(t,e),!0!==s.reflect||16&this._updateState||(void 0===this._reflectingProperties&&(this._reflectingProperties=new Map),this._reflectingProperties.set(t,s))):i=!1}!this._hasRequestedUpdate&&i&&(this._updatePromise=this._enqueueUpdate())}requestUpdate(t,e){return this.requestUpdateInternal(t,e),this.updateComplete}async _enqueueUpdate(){this._updateState=4|this._updateState;try{await this._updatePromise}catch(t){}const t=this.performUpdate();return null!=t&&await t,!this._hasRequestedUpdate}get _hasRequestedUpdate(){return 4&this._updateState}get hasUpdated(){return 1&this._updateState}performUpdate(){if(!this._hasRequestedUpdate)return;this._instanceProperties&&this._applyInstanceProperties();let t=!1;const e=this._changedProperties;try{t=this.shouldUpdate(e),t?this.update(e):this._markUpdated()}catch(e){throw t=!1,this._markUpdated(),e}t&&(1&this._updateState||(this._updateState=1|this._updateState,this.firstUpdated(e)),this.updated(e))}_markUpdated(){this._changedProperties=new Map,this._updateState=-5&this._updateState}get updateComplete(){return this._getUpdateComplete()}_getUpdateComplete(){return this._updatePromise}shouldUpdate(t){return!0}update(t){void 0!==this._reflectingProperties&&this._reflectingProperties.size>0&&(this._reflectingProperties.forEach(((t,e)=>this._propertyToAttribute(e,this[e],t))),this._reflectingProperties=void 0),this._markUpdated()}updated(t){}firstUpdated(t){}}W.finalized=!0;
/**
@license
Copyright (c) 2019 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/
const J=window.ShadowRoot&&(void 0===window.ShadyCSS||window.ShadyCSS.nativeShadow)&&"adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype,X=Symbol();class Z{constructor(t,e){if(e!==X)throw new Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");this.cssText=t}get styleSheet(){return void 0===this._styleSheet&&(J?(this._styleSheet=new CSSStyleSheet,this._styleSheet.replaceSync(this.cssText)):this._styleSheet=null),this._styleSheet}toString(){return this.cssText}}const G=(t,...e)=>{const s=e.reduce(((e,s,i)=>e+(t=>{if(t instanceof Z)return t.cssText;if("number"==typeof t)return t;throw new Error(`Value passed to 'css' function must be a 'css' function result: ${t}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`)})(s)+t[i+1]),t[0]);return new Z(s,X)};
/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
(window.litElementVersions||(window.litElementVersions=[])).push("2.4.0");const K={};class Q extends W{static getStyles(){return this.styles}static _getUniqueStyles(){if(this.hasOwnProperty(JSCompiler_renameProperty("_styles",this)))return;const t=this.getStyles();if(Array.isArray(t)){const e=(t,s)=>t.reduceRight(((t,s)=>Array.isArray(s)?e(s,t):(t.add(s),t)),s),s=e(t,new Set),i=[];s.forEach((t=>i.unshift(t))),this._styles=i}else this._styles=void 0===t?[]:[t];this._styles=this._styles.map((t=>{if(t instanceof CSSStyleSheet&&!J){const e=Array.prototype.slice.call(t.cssRules).reduce(((t,e)=>t+e.cssText),"");return new Z(String(e),X)}return t}))}initialize(){super.initialize(),this.constructor._getUniqueStyles(),this.renderRoot=this.createRenderRoot(),window.ShadowRoot&&this.renderRoot instanceof window.ShadowRoot&&this.adoptStyles()}createRenderRoot(){return this.attachShadow({mode:"open"})}adoptStyles(){const t=this.constructor._styles;0!==t.length&&(void 0===window.ShadyCSS||window.ShadyCSS.nativeShadow?J?this.renderRoot.adoptedStyleSheets=t.map((t=>t instanceof CSSStyleSheet?t:t.styleSheet)):this._needsShimAdoptedStyleSheets=!0:window.ShadyCSS.ScopingShim.prepareAdoptedCssText(t.map((t=>t.cssText)),this.localName))}connectedCallback(){super.connectedCallback(),this.hasUpdated&&void 0!==window.ShadyCSS&&window.ShadyCSS.styleElement(this)}update(t){const e=this.render();super.update(t),e!==K&&this.constructor.render(e,this.renderRoot,{scopeName:this.localName,eventContext:this}),this._needsShimAdoptedStyleSheets&&(this._needsShimAdoptedStyleSheets=!1,this.constructor._styles.forEach((t=>{const e=document.createElement("style");e.textContent=t.cssText,this.renderRoot.appendChild(e)})))}render(){return K}}Q.finalized=!0,Q.render=(t,s,i)=>{if(!i||"object"!=typeof i||!i.scopeName)throw new Error("The `scopeName` option is required.");const a=i.scopeName,n=M.has(s),r=O&&11===s.nodeType&&!!s.host,o=r&&!L.has(a),l=o?document.createDocumentFragment():s;if(((t,s,i)=>{let a=M.get(s);void 0===a&&(e(s,s.firstChild),M.set(s,a=new x(Object.assign({templateFactory:E},i))),a.appendInto(s)),a.setValue(t),a.commit()})(t,l,Object.assign({templateFactory:I(a)},i)),o){const t=M.get(l);M.delete(l);const i=t.value instanceof y?t.value.template:void 0;H(a,l,i),e(s,s.firstChild),s.appendChild(l),M.set(s,t)}!n&&r&&window.ShadyCSS.styleElement(s.host)};
/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
const Y=new WeakMap,tt=(et=t=>e=>{const s=Y.get(e);if(void 0===t&&e instanceof $){if(void 0!==s||!Y.has(e)){const t=e.committer.name;e.committer.element.removeAttribute(t)}}else t!==s&&e.setValue(t);Y.set(e,t)},(...t)=>{const e=et(...t);return u.set(e,!0),e});var et;class st extends Q{static get styles(){return G`
    #container {
      padding-top: 0.3em;
      padding-bottom: 0.3em;
    }

    svg {
      fill: var(--stat-block-divider-color, lightgrey);
      /* Stroke is necessary for good antialiasing in Chrome. */
      stroke: var(--stat-block-divider-color, lightgrey);
    }`}render(){return V`
      <div id="container">
        <svg width="100%" height="100%" viewBox="0 0 400 5" version="1.1" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;" preserveAspectRatio="none"><path d="M0,0l400,2.5l-400,2.5"></path></svg>
      </div>
    `}static get is(){return"vellum-stat-block-divider"}}customElements.define(st.is,st);class it extends Q{static get styles(){return G`
    :host {
      display: block;
      overflow: hidden;
      font-family: sans-serif;
      width: var(--stat-block-width, 350px);
      font-size: 10pt;
      margin-bottom: 1em;

      -webkit-column-break-inside: avoid;
                page-break-inside: avoid;
                     break-inside: avoid;
    }

    .bar {
      height: 5px;
      border: var(--stat-block-bar-border, 1px solid #000);
      position: relative;
      z-index: 1;
      background: var(--stat-block-bar-background, white);
    }

    .stat-block {
      margin-left: 0.2em;
      margin-right: 0.2em;
    }

    .content-wrapper {
      background: var(--stat-block-background, white);
      border-left: 1px var(--stat-block-border-color, black) solid;
      border-right: 1px var(--stat-block-border-color, black) solid;
      padding: 0.5em;
      box-shadow: 0.1em 0 0.1em rgba(0, 0, 0, 0.3), -0.1em 0 0.1em rgba(0, 0, 0, 0.3);
    }

    :host(.two-column) {
      width: var(--stat-block-two-column-width, 840px)
    }

    :host(.two-column) .content-wrapper {

       -webkit-columns: var(--stat-block-two-column-column-width, 388px) 2;
          -moz-columns: var(--stat-block-two-column-column-width, 388px) 2;
               columns: var(--stat-block-two-column-column-width, 388px) 2;

       -webkit-column-gap: 40px;
          -moz-column-gap: 40px;
               column-gap: 40px;

    }

    header h1:first-child {
      font-family: var(--stat-block-heading-font-family, serif);
      font-weight: bold;
      margin: 0px;
      font-size: 2em;
      font-variant: small-caps;
      color: var(--stat-block-header-color, black);
    }

    :host p {
      margin-top: 1pt;
      margin-left: 0;
      margin-right: 0;
      margin-bottom: 1pt;
    }

    header *:nth-child(2) {
      font-weight: normal;
      font-style: italic;
      font-size: 1em;
      margin: 0;
    }

    ol, ul {
      margin-top: 1em;
      padding-left: 0;
      margin-bottom: 0;
      line-spacing: 0;
    }

    ul {
      list-style-type: none;
    }

    :host p.description {
      font-style: italics;
      margin-bottom: 0;
    }`}static get is(){return"vellum-stat-block"}static get properties(){return{name:String,description:String}}render(){return V`
    <div class="bar"></div>

    <div class="stat-block">
      <div class="content-wrapper">

      <header id="header">
        ${this.renderHeader()}
      </header>

        <vellum-stat-block-divider></vellum-stat-block-divider>

        <div id="stats">${this.renderStats()}</div>

      </div>
    </div>

    <div class="bar"></div>`}renderHeader(){return V`
      <h1>${this.name}</h1>
      <p>${this.description}</p>`}renderStats(){return V`<slot></slot>`}}customElements.define(it.is,it);customElements.define("vellum-stat",class extends Q{static get styles(){return G`
    .stat-name {
      font-weight: bold;
    }

    p {
      margin-top: 1pt;
      margin-bottom: 0;
      margin-left: 0;
      margin-right: 0;
      padding-left: 1em;
      text-indent: -1em;
    }

    :host(.trait) p,
    :host(.action) p {
      margin-top: 0;
      margin-bottom: 1em;
      margin-left: 0;
      margin-right: 0;
      padding-left: 0;
      text-indent: 0;
    }

    :host(.table-row) p {
      padding-left: 0;
      text-indent: 1em;
    }

    :host(.trait) .stat-name,
    :host(.action) .stat-name {
      font-style: italic;
    }`}static get properties(){return{name:String,values:{type:String,hasChanged:(t,e)=>t!==e}}}render(){return V`<p>
      <span class="stat-name">${this.name}</span>
      <span class="stat-values">${this.renderValues()}</span>
    </p>`}renderValues(){if(Array.isArray(this.values))return this.values.join(", ");try{return JSON.parse(this.values).join(", ")}catch(t){return this.values?this.values:V`<slot></slot>`}}});class at extends Q{static get styles(){return G`
    :host {
      display: block;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      table-layout: fixed;
      border-spacing: 0;
      margin: 0.2em;
    }

    table th,
    table td {
      text-align: center;
      width: 50px;
      min-width: 50px;
      padding: 0;
      vertical-align: middle;
    }`}static get is(){return"vellum-stat-block-ability-scores"}static get properties(){return{str:Number,dex:Number,con:Number,int:Number,wis:Number,cha:Number}}render(){return V`
    <table>
      <thead>
        <tr>
          <th>STR</th>
          <th>DEX</th>
          <th>CON</th>
          <th>INT</th>
          <th>WIS</th>
          <th>CHA</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>${this.displayAbility(this.str)}</td>
          <td>${this.displayAbility(this.dex)}</td>
          <td>${this.displayAbility(this.con)}</td>
          <td>${this.displayAbility(this.int)}</td>
          <td>${this.displayAbility(this.wis)}</td>
          <td>${this.displayAbility(this.cha)}</td>
        </tr>
      </tbody>
    </table>`}displayAbility(t){const e=Math.round(t/2.1-5);return e>=0?t+" (+"+e+")":t+" ("+e+")"}}customElements.define(at.is,at);class nt extends Q{static get styles(){return G`
    .spells {
      font-style: italic;
    }`}static get is(){return"vellum-spell-level"}static get properties(){return{level:String,spells:Array,slots:Number}}render(){return V`
    <span class="spell-level">
      <span class="level">
        ${this.displayTitle()?this.displayTitle():V`${this.level} level`}
        ${this.slots>0?this.renderSlots():""}
      </span>

      <span class="spells">${this.renderSpells()}</span>
    </span>`}displayTitle(){switch(this.level.toLowerCase()){case"cantrips":return"Cantrips (at will):";case"at-will":return"At will:";case"1/day":return"1/day each:";default:return!1}}renderSlots(){return V`
    (${this.slots} ${this.slots>1?V`slots):`:V`slot):`}`}renderSpells(){if(Array.isArray(this.spells))return this.spells.join(", ");try{return JSON.parse(this.spells).join(", ")}catch(t){return this.spells}}}customElements.define(nt.is,nt);class rt extends Q{static get styles(){return G`
    :host {
      display: block;
    }

    h2 {
      font-family: var(--stat-block-heading-font-family, serif);
      border-bottom: 1px solid;
      font-variant: small-caps;
      color: var(--stat-block-header-color, black);
      break-inside: avoid-column;
      break-after: avoid-column;
      font-size: 1.5em;
      margin-top: 0.6em;
      margin-bottom: 0.4em;
    }`}static get is(){return"vellum-stat-block-section"}static get properties(){return{name:String}}render(){return V`
    <section>
      <h2>${this.name}</h2>

      <slot></slot>
    </section>`}}customElements.define(rt.is,rt);const ot={0:0,"⅛":25,"¼":50,"½":100,1:200,2:450,3:700,4:1100,5:1800,6:2300,7:2900,8:3900,9:5e3,10:5900,11:7200,12:8400,13:1e4,14:11500,15:13e3,16:15e3,17:18e3,18:2e4,19:22e3,20:25e3,21:33e3,22:41e3,23:5e4,24:62e3,25:75e3,26:9e4,27:105e3,28:12e4,29:135e3,30:155e3},lt=(t,e)=>(e=e||t,Array.from({length:e-t+1},((e,s)=>s+t))),ct=[{cr:"0",ac:lt(0,13),hpRange:lt(1,6),attackBonus:lt(0,3),damageRange:lt(0,1)},{cr:"⅛",ac:lt(13),hpRange:lt(7,35),attackBonus:lt(3),damageRange:lt(2,3)},{cr:"¼",ac:lt(13),hpRange:lt(36,49),attackBonus:lt(3),damageRange:lt(4,5)},{cr:"½",ac:lt(13),hpRange:lt(50,70),attackBonus:lt(3),damageRange:lt(6,8)},{cr:"1",ac:lt(13),hpRange:lt(71,85),attackBonus:lt(3),damageRange:lt(9,14)},{cr:"2",ac:lt(13),hpRange:lt(86,100),attackBonus:lt(3),damageRange:lt(15,20)},{cr:"3",ac:lt(13),hpRange:lt(101,115),attackBonus:lt(4),damageRange:lt(21,26)},{cr:"4",ac:lt(14),hpRange:lt(116,130),attackBonus:lt(5),damageRange:lt(27,32)},{cr:"5",ac:lt(15),hpRange:lt(131,145),attackBonus:lt(6),damageRange:lt(33,38)},{cr:"6",ac:lt(15),hpRange:lt(146,160),attackBonus:lt(6),damageRange:lt(39,44)},{cr:"7",ac:lt(15),hpRange:lt(161,175),attackBonus:lt(6),damageRange:lt(45,50)},{cr:"8",ac:lt(16),hpRange:lt(176,190),attackBonus:lt(7),damageRange:lt(51,56)},{cr:"9",ac:lt(16),hpRange:lt(191,205),attackBonus:lt(7),damageRange:lt(57,62)},{cr:"10",ac:lt(17),hpRange:lt(206,220),attackBonus:lt(7),damageRange:lt(63,68)},{cr:"11",ac:lt(17),hpRange:lt(221,235),attackBonus:lt(8),damageRange:lt(69,74)},{cr:"12",ac:lt(17),hpRange:lt(236,250),attackBonus:lt(8),damageRange:lt(75,80)},{cr:"13",ac:lt(18),hpRange:lt(251,265),attackBonus:lt(8),damageRange:lt(81,86)},{cr:"14",ac:lt(18),hpRange:lt(266,280),attackBonus:lt(8),damageRange:lt(87,92)},{cr:"15",ac:lt(18),hpRange:lt(281,295),attackBonus:lt(8),damageRange:lt(93,98)},{cr:"16",ac:lt(18),hpRange:lt(296,310),attackBonus:lt(9),damageRange:lt(99,104)},{cr:"17",ac:lt(19),hpRange:lt(311,325),attackBonus:lt(10),damageRange:lt(105,110)},{cr:"18",ac:lt(19),hpRange:lt(326,340),attackBonus:lt(10),damageRange:lt(111,116)},{cr:"19",ac:lt(19),hpRange:lt(341,355),attackBonus:lt(10),damageRange:lt(117,122)},{cr:"20",ac:lt(19),hpRange:lt(356,400),attackBonus:lt(10),damageRange:lt(123,140)},{cr:"21",ac:lt(19),hpRange:lt(401,445),attackBonus:lt(11),damageRange:lt(141,158)},{cr:"22",ac:lt(19),hpRange:lt(446,490),attackBonus:lt(11),damageRange:lt(159,176)},{cr:"23",ac:lt(19),hpRange:lt(491,535),attackBonus:lt(11),damageRange:lt(177,194)},{cr:"24",ac:lt(19),hpRange:lt(536,580),attackBonus:lt(11),damageRange:lt(195,212)},{cr:"25",ac:lt(19),hpRange:lt(581,625),attackBonus:lt(12),damageRange:lt(213,230)},{cr:"26",ac:lt(19),hpRange:lt(626,670),attackBonus:lt(12),damageRange:lt(231,248)},{cr:"27",ac:lt(19),hpRange:lt(671,715),attackBonus:lt(13),damageRange:lt(249,266)},{cr:"28",ac:lt(19),hpRange:lt(716,760),attackBonus:lt(13),damageRange:lt(267,284)},{cr:"29",ac:lt(19),hpRange:lt(761,805),attackBonus:lt(13),damageRange:lt(285,302)},{cr:"30",ac:lt(19),hpRange:lt(806,850),attackBonus:lt(14),damageRange:lt(303,320)}];class dt{orUndefined(){return this.orElse(void 0)}}const ht=Object.assign(new dt,{map:t=>ht,flatMap:t=>ht,orElse:t=>t,forEach(t){},toString:()=>"Nothing"});class pt extends dt{constructor(t){super(),this._value=t}map(t){return ut(t(this._value))}flatMap(t){return t(this._value)}orElse(t){return this._value}forEach(t){t(this._value)}toString(){return`Some(${this._value})`}}const ut=t=>null==t?ht:(t=>new pt(t))(t),mt=t=>ot[t],gt=t=>""===t?void 0:t,ft=t=>{const e=/^(\d*)d(\d+)(\s*(\+|-)\s*(\d+))?$/g;return ut(t).map((t=>t.trim())).map((t=>e.exec(t))).map((t=>{const[,e="1",s,,i="+",a="0"]=t.map(gt);return{number:parseInt(e),dice:parseInt(s),modifier:parseInt(i+a)}})).orUndefined()},yt=t=>ut(t).map(ft).map((t=>Math.floor((t.dice/2+.5)*t.number)+t.modifier)).orUndefined(),vt=ct.map(((t,e)=>Object.assign({index:e},t))),bt=(t,e)=>t.flatMap((t=>e.map((e=>vt[Math.max(0,t.index+e)])))),St=t=>t.map((t=>t.cr)).orUndefined(),_t=t=>{const e=ut(vt.find((e=>e.hpRange.includes(t.hp)))),s=(i=e,a=t.ac,i.map((t=>{const e=t.ac.slice(-1)[0];return Math.trunc((a-e)/2)})));var i,a;const n=bt(e,s),r=ut(vt.find((e=>e.damageRange.includes(t.damagePerRound)))),o=(l=r,c=t.attackBonus,l.map((t=>{const e=t.attackBonus.slice(-1)[0];return Math.trunc((c-e)/2)})));var l,c;const d=bt(r,o),h=(p=d,n.flatMap((t=>p.map((e=>{const s=Math.round(((...t)=>t.reduce(((t,e)=>t+e))/t.length)(t.index,e.index));return vt[s]})))));var p;return{hpCr:St(e),acAdjustment:s.orUndefined(),defensiveCr:St(n),damageCr:St(r),attackBonusAdjustment:o.orUndefined(),offensiveCr:St(d),effectiveCr:St(h)}};class kt extends Q{static get styles(){return G`
    .attack-name {
      font-weight: bold;
      font-style: italic;
    }

    .attack-type {
      font-style: italic;
    }

    ol.random-effects {
      list-style: none;
      padding: 0;
      margin-bottom: 0;
    }

    .random-effects li {
      text-indent: 1em;
      margin-bottom: 0;
    }

    .effect-title {
      font-style: italic;
    }`}static get is(){return"vellum-attack"}static get properties(){return{name:String,type:String,bonus:String,reach:String,range:String,target:String,damage:String,damageType:String,notes:String,limitedUsage:String,effects:Array}}static _attributeNameForProperty(t,e){return super._attributeNameForProperty((t=>t.replace(/([a-zA-Z])(?=[A-Z])/g,"$1-").toLowerCase())(t),e)}render(){return V`
    <p class="attack">
      <span class="attack-name">${this.name}${this.limitedUsage?V` (${this.limitedUsage})`:V``}.</span>
      <span class="attack-description">
        <span class="attack-type">${this.attackTypeDescription()}:</span>
        ${this.bonus} to hit,
        ${this.reachOrRange()},
        ${this.target}.
        <em>Hit:</em> ${this.averageDamage()} (${this.damage}) ${this.damageType} damage${this.notes}.
      </span>
    </p>

    ${this.renderEffects()}`}renderEffects(){let t=this.effects;return t&&!Array.isArray(t)&&(t=JSON.parse(this.effects)),this.effects?V`
      <ol class="random-effects">
        ${t.sort(this.sortRandomEffects).map((t=>this.renderEffect(t)))}</li>
      </ol>`:V``}renderEffect(t){return V`
    <li>
      <span class="effect-title">${t.roll}. ${t.name}.</span>
      ${t.effect}
    </li>`}attackTypeDescription(){switch(this.type){case"melee-attack":return"Melee Weapon Attack";case"ranged-attack":return"Ranged Weapon Attack";case"melee-or-ranged-attack":return"Melee or Ranged Weapon Attack"}}reachOrRange(){switch(this.type){case"melee-attack":return"reach "+this.reach;case"ranged-attack":return"range "+this.range;case"melee-or-ranged-attack":return"reach "+this.reach+" or range "+this.range}}sortRandomEffects(t,e){return t.roll<e.roll?-1:t.roll>e.roll?1:0}averageDamage(){return yt(this.damage)}}customElements.define(kt.is,kt);class wt extends Q{static get is(){return"vellum-legendary-action"}static get styles(){return G`
    .action-name {
      font-weight: bold;
    }`}static get properties(){return{name:String,actions:Number,description:String}}render(){return V`
    <span class="action-name">${this.name}${this.costsMulipleActions()?V` (Costs ${this.actions} Actions)`:V``}.</span>
    ${this.description}`}costsMulipleActions(){return this.actions>1}}customElements.define(wt.is,wt);class $t extends it{static get styles(){return[super.styles,G`#legendary-actions ul li {
        margin: 0;
        padding-left: 1em;
        text-indent: -1em;
      }`]}static get is(){return"vellum-monster"}static get properties(){return{name:{type:String},named:{type:Boolean},size:{type:String},type:{type:String},alignment:{type:String},ac:{type:Number},armor:{type:String},displayArmor:{type:String},"hit-die":{type:String},hp:{type:Number},speeds:{type:Array},str:{type:Number},dex:{type:Number},con:{type:Number},int:{type:Number},wis:{type:Number},cha:{type:Number},"saving-throws":{type:Array},skills:{type:Array},vulnerabilities:{type:String},resistances:{type:String},immunities:{type:Array},threshold:{type:Number},"condition-immunities":{type:Array},senses:{type:Array},languages:{type:Array},cr:{type:String},xp:{type:Number},traits:{type:Array},spellcasting:{type:Object},actions:{type:Array},reactions:{type:Array},"legendary-actions":{type:Array}}}connectedCallback(){if(super.connectedCallback(),this.calculatedCrs){const t=t=>t>0?`+${t}`:t;console.table({name:{value:this.name},hitPoints:{value:this.effectiveHp,effectiveCr:this.calculatedCrs.hpCr},armourClass:{value:this.effectiveAc,effectiveCr:t(this.calculatedCrs.acAdjustment)},defensive:{effectiveCr:this.calculatedCrs.defensiveCr},damage:{value:this.effectiveDamage,effectiveCr:this.calculatedCrs.damageCr},attackBonus:{value:this.effectiveAttackBonus,effectiveCr:t(this.calculatedCrs.attackBonusAdjustment)},offensive:{effectiveCr:this.calculatedCrs.offensiveCr},cr:{value:this.cr,effectiveCr:this.calculatedCrs.effectiveCr}})}}get description(){const t=this.size+" "+this.type;return this.alignment?t+", "+this.alignment:t}renderStats(){return V`
      <div id="monster-stats" class="main-stats">

        <div class="combat-stats">
          ${this.renderStat("ac","Armor Class",this.armor?`${this.ac} (${this.armor})`:this.ac)}
          ${this.renderStat("hp","Hit Points",this["hit-die"]?`${this.displayHp} (${this["hit-die"]})`:this.hp)}
          ${this.renderStat("speed","Speed",this.speeds)}
        </div>

        ${this.hasAbilities?this.renderAbilities():V``}

        <div>

          ${this.renderStat("saving-throws","Saving Throws",this["saving-throws"])}
          ${this.renderStat("skills","Skills",this.skills)}
          ${this.renderStat("damage-vulnerabilities","Damage Vulnerabilities",this.vulnerabilities)}
          ${this.renderStat("damage-resistances","Damage Resistances",this.resistances)}
          ${this.renderStat("damage-immunities","Damage Immunities",this.immunities)}
          ${this.renderStat("damage-threshold","Damage Threshold",this.threshold)}
          ${this.renderStat("condition-immunities","Condition Immunities",this["condition-immunities"])}
          ${this.renderStat("senses","Senses",this.senses)}
          ${this.renderStat("languages","Languages",this.languages)}

          ${(this.calculatedCrs.effectiveCr||this.cr)&&"object"!==this.type?V`<vellum-stat id="cr" name="Challenge" .values="${this.cr?this.cr:this.calculatedCrs.effectiveCr} (${this.displayXp} XP)"></vellum-stat>`:V``}

        </div>
      </div>

      <vellum-stat-block-divider></vellum-stat-block-divider>

      <div id="traits-and-actions">
        ${this.traits?this.renderSpecialTraits():V``}

        ${this.spellcasting&&this.spellcasting.levels?this.renderSpellcasting():V``}

        ${this.actions?this.renderActions():V``}

        ${this.reactions?this.renderReactions():V``}

        ${this["legendary-actions"]&&this["legendary-actions"].actions?this.renderLegendaryActions():V``}
      </div>`}renderAbilities(){return V`
      <vellum-stat-block-divider></vellum-stat-block-divider>

      <vellum-stat-block-ability-scores
        id="ability-scores"
        str="${this.str}"
        dex="${this.dex}"
        con="${this.con}"
        int="${this.int}"
        wis="${this.wis}"
        cha="${this.cha}"
      ></vellum-stat-block-ability-scores>

      <vellum-stat-block-divider></vellum-stat-block-divider>`}renderStat(t,e,s){return void 0!==s&&""!==s?V`<vellum-stat id="${t}" name="${e}" .values=${s}></vellum-stat>`:V``}renderSpecialTraits(){return V`${this.traits.map(((t,e)=>V`
          <vellum-stat
            id="special-trait-${e}"
            class="trait"
            name="${t.name}."
            .values="${t.description}"
          ></vellum-stat>`))}`}renderSpellcasting(){return V`
      <vellum-stat id="spellcasting" class="trait" name="Spellcasting." values="${this.spellcastingDescription}"></vellum-stat>

      <ul>
        ${this.spellcasting.levels.map(((t,e)=>V`<li><vellum-spell-level id="spell-level-${e}" level="${t.level}" slots="${t.slots}" .spells="${t.spells}"></vellum-spell-level></li>`))}
      </ul>`}renderActions(){return V`
      <vellum-stat-block-section id="actions" name="Actions">
        ${this.actions.map(((t,e)=>this.renderAction(t,e)))}
      </vellum-stat-block-section>`}renderAction(t,e){return this._isNotAttack(t)?V`
        <vellum-stat
          id="action-${e}"
          class="action" name="${t.name}${t.limitedUsage?` (${t.limitedUsage})`:""}."
          values="${t.description}"
        ></vellum-stat>`:this._isMultiAttack(t)?V`<vellum-stat id="multiattack-${e}" class="action" name="Multiattack." values="${t.description}"></vellum-stat>`:this._isAttack(t)?V`
        <vellum-attack
          id="attack-${e}"
          .name="${t.name}"
          .type="${t.type}"
          .bonus="${t.bonus}"
          .reach="${t.reach}"
          .range="${t.range}"
          .target="${t.target}"
          .damage="${t.damage}"
          damage-type="${t.damageType}"
          .notes="${t.notes}"
          limited-usage=${tt(t.limitedUsage)}
          .effects="${t.randomEffects}"
        ></vellum-attack>`:void 0}renderReactions(){return V`
      <vellum-stat-block-section id="reactions" name="Reactions">
        ${this.reactions.map(((t,e)=>V`<vellum-stat id="reaction-${e}" class="action" name="${t.name}." values="${t.description}"></vellum-stat>`))}
      </vellum-stat-block-section>`}renderLegendaryActions(){return V`
      <vellum-stat-block-section id="legendary-actions" name="Legendary Actions">

        <p>${this.subjectLabel} can take ${this["legendary-actions"].number} legendary actions, choosing from the options below. Only one legendary action can be used at a time, and only at the end of another creature's turn. Spent legendary actions are regained at the start of each turn.</p>

        <ul>
          ${this["legendary-actions"].actions.map(((t,e)=>V`<li><vellum-legendary-action id="legendary-action-${e}" name="${t.name}" actions="${t.actions}" description="${t.description}"></vellum-legendary-action></li>`))}
        </ul>

      </vellum-stat-block-section>`}get hasAbilities(){return void 0!==this.str&&void 0!==this.dex&&void 0!==this.con&&void 0!==this.int&&void 0!==this.wis&&void 0!==this.cha}get subjectLabel(){return this.named?this.name:`The ${this.name.toLowerCase()}`}get spellcastingDescription(){if(this.spellcasting)return`\n        ${this.spellcasting.innate?"":`${this.subjectLabel} is a ${this.spellcasting.level}-level spellcaster.`}\n        ${this.spellcasting.innate?`${this.subjectLabel}'s innate`:"Its"}\n        spellcasting ability is ${this.spellcasting.ability} (spell save DC\n        ${this.spellcasting.save}${this.spellcasting.attackBonus?",":")"}${this.spellcasting.attackBonus?`${this.spellcasting.attackBonus} to hit with spell attacks)`:""}${this.spellcasting.notes}\n        ${this.spellcasting.innate?"":`${this.subjectLabel} has the following ${this.spellcasting.class} spells prepared:`}`}get displayXp(){return this.xp?this.xp:this.cr?mt(this.cr):mt(this.calculatedCrs.effectiveCr)}get displayHp(){const t=this["hit-die"];return!this.hp&&t?yt(t):this.hp?this.hp:""}get allTraitsAndActions(){return[].concat(this.traits||[]).concat(this.actions||[]).concat(this["legendary-actions"]?this["legendary-actions"].actions:[]).concat(this.reactions||[])}get calculatedCrs(){return _t({hp:this.effectiveHp,ac:this.effectiveAc,attackBonus:this.effectiveAttackBonus,damagePerRound:this.effectiveDamage})}get effectiveHp(){return this.allTraitsAndActions.filter((t=>t.hpAdjustment)).map((t=>t.hpAdjustment)).map((t=>parseInt(t))).reduce(((t,e)=>t+e),parseInt(this.displayHp))}get effectiveAc(){return this.allTraitsAndActions.filter((t=>t.acAdjustment)).map((t=>t.acAdjustment)).map((t=>parseInt(t))).reduce(((t,e)=>t+e),parseInt(this.ac))}get effectiveAttackBonus(){return this.allTraitsAndActions.filter((t=>t.attackAdjustment)).map((t=>t.attackAdjustment)).map((t=>parseInt(t))).reduce(((t,e)=>t+e),this.maxAttackBonus)}get effectiveDamage(){return this.allTraitsAndActions.filter((t=>t.damageAdjustment)).map((t=>t.damageAdjustment)).map((t=>parseInt(t))).reduce(((t,e)=>t+e),this.maxDamagePerRound)}get maxAttackBonus(){const t=(this.actions||[]).filter((t=>t.type)).map(this._calculateMultiattack(this.actions)).map((t=>t.bonus)).map((t=>parseInt(t)));return t.length<1?0:Math.max(...t)}get maxDamagePerRound(){const t=(this.actions||[]).filter((t=>t.type)).map(this._calculateMultiattack(this.actions)).map((t=>t.averageDamage?t.averageDamage:yt(t.damage)));return t.length<1?0:Math.max(...t)}_calculateMultiattack(t){return e=>{if(e.type&&"multiattack"===e.type){const s=t.filter((t=>t.id===e.multiAttacks.id))[0];return e.averageDamage=e.multiAttacks.number*yt(s.damage),e.bonus=s.bonus,e}return e}}_isNotAttack(t){return void 0===t.type}_isAttack(t){return"ranged-attack"===t.type||"melee-attack"===t.type||"melee-or-ranged-attack"===t.type}_isMultiAttack(t){return"multiattack"===t.type}}window.customElements.define($t.is,$t);const xt=t=>t?t[0].toUpperCase()+t.slice(1):"";class At extends it{static get styles(){return G`
      ${it.styles}

      p.description {
        font-style: italics;
        margin-bottom: 0;
      }

      #npc-header p::first-letter {
        text-transform: capitalize;
      }

      a {
        color: var(--stat-block-header-color, black);
        text-decoration: none;
      }
    `}static get is(){return"vellum-npc"}static get properties(){return{name:String,description:String,race:String,statblock:String,statblockref:String,dndbeyond:Boolean,alignment:String,attitude:String,gender:String,pronouns:String}}renderHeader(){const t=[this.gender,this.pronouns,this.alignment,this.attitude].filter((t=>void 0!==t)).filter((t=>""!==t)),e=this.dndbeyond?`https://www.dndbeyond.com/monsters/${this.statblock}`:this.statblockref;return V`
      <div id="npc-header">
        <h1>${this.name}</h1>
        <p>
          ${xt(this.gender)}
          ${this.gender?this.race:xt(this.race)}
          <strong id="statblock">${this.renderStatblock(this.gender||this.race?this.statblock:xt(this.statblock),e)}</strong>
          (${t.join(", ")})</p>
      </div>`}renderStatblock(t,e){return e?V`<a href="${e}" alt="${t}">${t}</a>`:t}renderStats(){const t=V`
      <p id="description">${this.description}</p>
      <vellum-stat-block-divider id="description-divider"></vellum-stat-block-divider>`;return V`
      <div id="npc-stats">

        ${this.description?t:V``}

        <slot></slot>
      </div>`}}customElements.define(At.is,At);
